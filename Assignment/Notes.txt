Interfaces don't contain the actual function they just contain the declaration of methods or functions that the implementing class should implement 
Static keyword is used to tell that the function is part of a class itself and object creation is not required to use it 

To compile a java file 
javac Calculate.java // Compile all the classes using this and Calculate.class is generated
java Calculate // Run the file that has the main method 

To Create a jar file:
Create a manifest.mf // which Contains the class details having the main function : Main-Class: Calculate
javac Calculate.java // Compile all the classes using this and Calculate.class is generated
java Calculate // Run the file that has the main method javac
jar -cvfm apple.jar manifest.mf *.class // check verbose  file manifest flag 

To run jar:
java -jar apple.jar


Collection Framework
ArrayList if datatype isn't specified it treats value as object
For specifying the datatype we use Integer class and not int

ArrayList<Integer> ar=new ArrayList<Integer>();
Common methods are add , get ,remove , clear, addAll, removeAll, contains , isEmpty, retainAll
LinkedList to store in form of a rope
List is a parent class for LinkedList and ArrayList
toString is used to print the ArrayList objects :
@Override
public String toString(){
return {value}+" "+{Value2}+" "{Value3};// this defines what will be printed when we are trying to print the objects
}
HashSet used to store unique values in random order
LinkedHashSet is used to store unique values in the same order
HashSet fails in objects or with values with user defined calsses

To overcome this need to implemet two more methods in the user defined class
@Override
public int hashCode(){
return Object.hash(ModelName,price);}

@Override
public boolean equals(Object obj){
if(this==obj)
return true;
if(obj==null)
return false;
if(getClass()!=obj.getClass())
return false;
Smartphone other=(Smatphonne) obj;
return Objects.equals(ModelName,other.ModelName)&& price==other.price; 
}


For custom comparators 
public class Smartphone implements Comparable<Smartphone>{

@Override
public int compareTo(Smartphone o)
{
if(this.price>o.price)// ascending order sorting
return 1;
else if(this.price<o.price)
return -1;
else 
return 0;
}

HashMap:
map.put
map.keySet()
map.get(key)
to iterate through both the key and value:
Map.Entry<Integer,String> entry : map.entrySet()
entry.getKey(), entry.getValue()


Object class is a parent class of all classes in Java

Lambda Expressions help us to make functions :  methods which can exist on their without existence of any class

Functional Innterface : Interface having only 1 abstract method
public interface Message{
public void sendMessage();
}
Lambda exp work only with functional interfaces

HTTP SESSION:
Piece of information that is mainted whenever you use the web application we have same session for full web application
HTTP Cookies:
Tokens used when the client interacts with server 


Servlet Config:
We can intially store some key value pairs in web .xml that can be used by our servlets later on

Servlet Context:
We can create certain parameters/values that will be constant for all the servlets in the web application


What are Servlet Filters?

A Servlet Filter is an object that intercepts requests and responses in a Java web application.

It is defined in web.xml or via annotations.

Filters can be used for:

Authentication & authorization

Logging and auditing

Compression

Modifying request or response data

Think of it as a gatekeeper that sits between the client and your servlet.

JSP Scripting Elements :
To insert java code inside the servlets or JSP
Three types :
Scriplet used to insert statements
Expressions used to write expressions
Declaration used to declare values


JSP Directives :
Basically messages that tell the web container how to translate a JSP page into the corresponding servlet
Three types:
JSP page directive
JSP include directive 
JSP  taglib directive

JSP action tags : they are used to cntrol the flow between the pages inside a jsp forward and param


Java Beans action tag:
It's simple class:
a)It shouldn't have parameterised constructor
b)It should be serializable
c)It should have getters and setters

Expression Language :
It is a type of syntax or language that simplifies the accessibility of data in Java . Using it you can use data from various places in avery simplified and structured manner 

JSP MVC:
Model,view and controller
Controller : Intercepts all requests
Model : actual state of the application
View:How the application looks


